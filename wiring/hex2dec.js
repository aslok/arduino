function zeroFill( number, width )
{
  width -= number.toString().length;
  if ( width > 0 )
  {
    return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
  }
  return number + ""; // always return a string
}

a = [
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x1f,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xfc,0x20,0x6f,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xf1,0xf0,0xf1,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xe7,0xf9,0xfc,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xf0,0x3,0xff,0xf8,0x7f,0xff,0xf0,
  0xff,0xff,0x87,0xff,0xc7,0x3,0xff,0xf8,0x3f,0xff,0xf0,
  0xff,0xfe,0x31,0xe0,0x1f,0xc3,0xff,0xf8,0x9f,0xff,0xf0,
  0xff,0xfc,0x7c,0xcf,0xdf,0xff,0xff,0xff,0xdf,0xff,0xf0,
  0xff,0xff,0x7e,0x3f,0xc3,0xff,0xff,0xff,0xf,0xff,0xf0,
  0xff,0xff,0x8f,0x7f,0xfb,0xff,0xff,0xf4,0x4f,0xff,0xf0,
  0xff,0xff,0xe1,0x0,0x33,0xff,0xff,0xf1,0xf7,0xff,0xf0,
  0xff,0xff,0xcc,0x39,0x87,0xff,0xff,0xfd,0xf1,0xff,0xf0,
  0xff,0xff,0xde,0x7d,0xe7,0xff,0xff,0xff,0xfc,0xff,0xf0,
  0xff,0xff,0x1c,0xfe,0xf3,0xff,0xff,0xff,0xfe,0x7f,0xf0,
  0xff,0xfe,0x3d,0xfe,0xf9,0xff,0xff,0xff,0xff,0x7f,0xf0,
  0xff,0xfe,0x80,0x0,0x99,0xff,0x3,0xff,0xff,0x1f,0xf0,
  0xff,0xfc,0xd2,0x9d,0x6c,0xfc,0x79,0xff,0xfe,0x5f,0xf0,
  0xff,0xf9,0xc,0x78,0xae,0xf9,0xfc,0xff,0x3f,0xdc,0x70,
  0xff,0xfa,0xe2,0x83,0x2e,0xf3,0xfe,0xff,0x9f,0x0,0x30,
  0xe7,0xf9,0x3d,0x7c,0x5e,0xf7,0xfe,0xff,0xdf,0xe6,0x10,
  0xcb,0xa,0x9e,0xf9,0xde,0x3,0xfe,0xfb,0xcf,0xe6,0x50,
  0x98,0x78,0xcd,0x77,0xbe,0xff,0xfe,0xf1,0xe3,0xcf,0x50,
  0xff,0xfe,0xe3,0x7,0x38,0xff,0xfc,0x60,0xf1,0xef,0xd0,
  0xff,0xf8,0x4,0x30,0x1,0xdf,0xf9,0x80,0xf6,0x6f,0x10,
  0xff,0xff,0xf1,0xc7,0xfc,0x3d,0xc3,0xf8,0x7,0xc,0x70,
  0xff,0xff,0xff,0xff,0xff,0x98,0x3f,0xff,0xff,0x81,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xc3,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0 ];

out = "";

for (f = 0; f < a.length; f += parseInt(84 / 8 + 1)){
  for (f2 = 0; f2 < parseInt(84 / 8 + 1); f2++){
    out += "B" + zeroFill(parseInt(a[f + f2]).toString(2), 8) + ",";
  }
  out += "\n";
}
